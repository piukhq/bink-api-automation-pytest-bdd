stages:
  - tests
  - allure
  - allure-deploy
  - develop
  - master

flake8:
  stage: tests
  image: binkhq/python:3.9
  script:
    - pip install flake8
    - flake8

allure:
  stage: tests
  image: binkhq/python:3.9
  script:
    - pip install pipenv
    - pipenv sync --dev
    - pipenv run pytest --alluredir=allure-results -m "wasabi" --env staging --channel bink
  artifacts:
    when: always
    paths:
      - allure-results/
    expire_in: 2 weeks
  only:
    - develop


allure-generate:
  stage: allure
  when: always
  image: frankescobar/allure-docker-service
  script:  # Cant mkdir in allure-results as the script user doesnt have permission, hence copy to /tmp
    - mkdir -p /tmp/allure-results/history/
    - cp -Rav allure-results/* /tmp/allure-results/
    - curl https://binkuksouthdev.blob.core.windows.net/qareports/develop/history/retry-trend.json -o /tmp/allure-results/history/retry-trend.json
    - curl https://binkuksouthdev.blob.core.windows.net/qareports/develop/history/history-trend.json -o /tmp/allure-results/history/history-trend.json
    - curl https://binkuksouthdev.blob.core.windows.net/qareports/develop/history/categories-trend.json -o /tmp/allure-results/history/categories-trend.json
    - curl https://binkuksouthdev.blob.core.windows.net/qareports/develop/history/duration-trend.json -o /tmp/allure-results/history/duration-trend.json
    - curl https://binkuksouthdev.blob.core.windows.net/qareports/develop/history/history.json -o /tmp/allure-results/history/history.json
    - allure generate /tmp/allure-results -o allure-report 
  artifacts:
    when: always
    paths:
      - allure-report/
    expire_in: 2 weeks
  only:
    - develop 

allure-deploy:
  stage: allure-deploy
  when: always
  image: binkcore.azurecr.io/copy2blobstorage:latest
  script:
    - copy --sync --container=qareports allure-report /develop/
  only:
    - develop 


develop:
  stage: develop
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="develop-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/pyqa:$CTAG" .
    - docker push "$CI_REGISTRY/pyqa:$CTAG"
  only:
    - develop

master:
  stage: master
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="master-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/pyqa:$CTAG" .
    - docker push "$CI_REGISTRY/pyqa:$CTAG"
  only:
    - master
